
[
{
  "id": 1,
  "title": "Dockerized ETL Pipeline with Airflow",
  "description": "Designed and deployed an end-to-end ETL pipeline using Apache Airflow running in a Dockerized environment. This project demonstrates automated data extraction, transformation, and loading from CSV files into a PostgreSQL database. Includes custom Airflow DAGs, task monitoring, and error handling. Ideal for showcasing scalable, modular ETL workflows and Airflow orchestration best practices.",
  "role": "Data Engineer & Project Author",
  "techStack": ["Python", "Apache Airflow", "Docker", "PostgreSQL", "Pandas", "Shell Scripting"],
  "githubUrl": "https://github.com/logarajeshwaran/dockerized-airflow-etl",
  "liveUrl": "",
  "image": "https://images.unsplash.com/photo-1556761175-5973dc0f32e7?w=600&h=400&fit=crop"
},
{
  "id": 2,
  "title": "Data Warehousing Project with Star Schema Modeling",
  "description": "Developed a complete data warehousing solution involving data extraction, transformation, and loading into a star schema. Designed fact and dimension tables to support sales and customer analysis. Implemented SQL-based data transformation logic and created optimized views to enable efficient analytics and reporting. This project showcases practical data modeling and warehousing skills.",
  "role": "Data Engineer & Solution Designer",
  "techStack": ["SQL", "PostgreSQL", "Data Modeling", "Star Schema", "ETL"],
  "githubUrl": "https://github.com/logarajeshwaran/Data_Warehousing",
  "liveUrl": "",
  "image": "https://picsum.photos/seed/data-warehouse/600/400"
},
{
  "id": 3,
  "title": "Weather Reporting End-to-End Pipeline on AWS",
  "description": "Built a full-stack data pipeline that collects, processes, and visualizes real-time weather data using AWS services. The pipeline includes ingestion from external APIs, transformation with AWS Lambda and Glue, and storage in S3 and Redshift. Final output is visualized through dashboards, enabling real-time insights into weather conditions and trends.",
  "role": "End-to-End Pipeline Developer",
  "techStack": ["AWS Lambda", "AWS Glue", "Amazon S3", "Amazon Redshift", "Python", "API Integration", "CloudWatch"],
  "githubUrl": "https://github.com/logarajeshwaran/Weather-Reporting-End-to-End-Pipeline-in-AWS",
  "liveUrl": "",
  "image": "https://picsum.photos/seed/aws-weather/600/400"
},
{
  "id": 4,
  "title": "Kafka Streaming Demo with Python",
  "description": "Implemented a producer-consumer model using Apache Kafka to simulate real-time message streaming. This project demonstrates core Kafka concepts including topic creation, partitioning, and fault-tolerant message delivery. Built with Python, the setup showcases how to stream, monitor, and consume messages reliably in distributed systems.",
  "role": "Streaming Engineer & Developer",
  "techStack": ["Apache Kafka", "Python", "Kafka Topics", "Producer/Consumer Model", "Zookeeper"],
  "githubUrl": "https://github.com/logarajeshwaran/Kafka",
  "liveUrl": "",
  "image": "https://picsum.photos/seed/kafka-stream/600/400"
}
]
